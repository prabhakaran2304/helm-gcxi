{{ if eq (.Values.gcxi.deployment.deployMain | default false) true }}
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "gcxi.labels" . | nindent 4 }}
  name: gcxi-config{{ template "deploymentCode" . }}
  namespace: {{ .Values.gcxi.app.namespace }}
data:
  DEV_ERR_EXIT: "{{ .Values.gcxi.env.DEV_ERR_EXIT }}"
  DEV_JTRACE_LEVEL: "{{ .Values.gcxi.env.DEV_JTRACE_LEVEL }}"
  DEV_JTRACE_OPTS: "{{ .Values.gcxi.env.DEV_JTRACE_OPTS }}"
  DEV_XTRACE_LEVEL: "{{ .Values.gcxi.env.DEV_XTRACE_LEVEL }}"


  ### Deployment properties ###

  DEPLOYMENT_CODE: "{{ include "deploymentCode" . | trimPrefix "-" }}"
  GCXI_ACTIVE: "{{ .Values.gcxi.env.GCXI_ACTIVE }}"
  IWD_ACTIVE: "{{ .Values.gcxi.env.IWD_ACTIVE }}"

  GCXI_VERSION: "{{ template "gcxiVersion" . }}"
  MSTR_TENANT_COLOR: "{{ .Values.gcxi.deployment.tenantColor }}"
  MSTR_TENANT_ID: "{{ .Values.gcxi.deployment.tenantId }}"


  ### DSN (data source) properties: GIM and others ###

  {{- if .Values.gcxi.env.GCXI_GIM_DB.DSNDEF }}
  DSNDEFGIM: {{ tpl .Values.gcxi.env.GCXI_GIM_DB.DSNDEF . }}
  {{- end }}

  {{- if .Values.gcxi.env.IWD_DB.DSNDEF }}
  DSNDEFIWD: {{ tpl .Values.gcxi.env.IWD_DB.DSNDEF . }}
  {{- end }}

  {{- range $index, $def := .Values.gcxi.env.DSNDEFS }}
  DSNDEF{{ $index }}: {{ tpl $def.DSNDEF $ }}
  {{- end }}

  {{- if .Values.gcxi.env.DSN_ODBCINI }}
  DSN_ODBCINI: |-
{{ tpl .Values.gcxi.env.DSN_ODBCINI . | indent 4}}
  {{- end }}


  ### Meta db properties ###
  ## admin properties moved to gcxi-configmap-pg.yaml

  {{- if .Values.gcxi.env.META_DB_LOGIN }}
  META_DB_LOGIN: "{{ tpl .Values.gcxi.env.META_DB_LOGIN . }}"
  {{- end }}

  {{- if .Values.gcxi.env.META_DB_PASSWORD }}
  META_DB_PASSWORD: "{{ tpl .Values.gcxi.env.META_DB_PASSWORD . }}"
  {{- end }}

  {{- if .Values.gcxi.env.META_HIST_LOGIN }}
  META_HIST_LOGIN: "{{ tpl .Values.gcxi.env.META_HIST_LOGIN . }}"
  {{- end }}

  {{- if .Values.gcxi.env.META_HIST_PASSWORD }}
  META_HIST_PASSWORD: "{{ tpl .Values.gcxi.env.META_HIST_PASSWORD . }}"
  {{- end }}

  {{- if .Values.gcxi.env.META_DB_ODBC_OPTS }}
  META_DB_ODBC_OPTS: "{{ tpl .Values.gcxi.env.META_DB_ODBC_OPTS . }}"
  {{- end }}

  {{- if .Values.gcxi.env.META_HIST_ODBC_OPTS }}
  META_HIST_ODBC_OPTS: "{{ tpl .Values.gcxi.env.META_HIST_ODBC_OPTS . }}"
  {{- end }}

  PGLOCK_CONN_OPTS: "{{ .Values.gcxi.env.PGLOCK_CONN_OPTS }}"


  ### GWS / GAuth ###

  GCXI_AUTH_MODE: "{{ .Values.gcxi.env.GCXI_AUTH_MODE }}"

  ## example: http://gauth-environment-active.gauth/environment/v3/environments
  {{- if .Values.gcxi.env.GAUTH_API_INT_ENV }}
  GAUTH_API_INT_ENV: "{{ tpl .Values.gcxi.env.GAUTH_API_INT_ENV . }}"
  {{- end }}

  ## example: http://gauth-auth-active.gauth
  {{- if .Values.gcxi.env.GAUTH_API_INT }}
  GAUTH_API_INT: "{{ tpl .Values.gcxi.env.GAUTH_API_INT . }}"
  {{- end }}

  GAUTH_PROTO_HEADER: "{{ .Values.gcxi.env.GAUTH_PROTO_HEADER }}"
  GAUTH_REDIRECT_PROTO: "{{ .Values.gcxi.env.GAUTH_REDIRECT_PROTO }}"

  ## example: https://gauth.api01-westus2.dev.genazure.com
  {{- if .Values.gcxi.env.GAUTH_UI_EXT }}
  GAUTH_UI_EXT: "{{ tpl .Values.gcxi.env.GAUTH_UI_EXT . }}"
  {{- end }}

  TENANT_UUID: "{{ .Values.gcxi.env.TENANT_UUID }}"


  ### File processing ###

  {{- range $index, $def := .Values.gcxi.env.FILEDEFS }}
  FILEDEF{{ $index }}: {{ $def.FILEDEF }}
  {{- end }}

  {{- range $index, $def := .Values.gcxi.env.FILEOVRS }}
  FILEOVR{{ $index }}: {{ $def.FILEOVR }}
  {{- $var := $def.FILEOVR__DATA }}
  {{- if $var }}
  FILEOVR{{ $index }}__DATA: {{ toYaml $def.FILEOVR__DATA | indent 2 }}
  {{- end }}
  {{- end }}


  ### Other container properties ###

  ACCESS_RESTRICTION: "{{ .Values.gcxi.env.ACCESS_RESTRICTION }}"

  EMAIL_SERVER: "{{ .Values.gcxi.env.EMAIL_SERVER }}"

  MSTR_EXTURL: "{{ template "mstrExtUrl" . }}"

  MSTR_WEB_DEFAULT_LOGIN_MODE: "{{ .Values.gcxi.env.MSTR_WEB_DEFAULT_LOGIN_MODE }}"
  MSTR_WEB_LDAP_ON: "{{ .Values.gcxi.env.MSTR_LDAP_ON }}"
  MSTR_WEB_SAML_ON: "{{ .Values.gcxi.env.MSTR_SAML_ON }}"
  MSTR_WEB_SECURE_COOKIE: "{{ .Values.gcxi.env.MSTR_WEB_SECURE_COOKIE }}"
  MSTR_WEB_VALIDATE_RANDNUM: "{{ .Values.gcxi.env.MSTR_WEB_VALIDATE_RANDNUM }}"

  RUN_MODE: "{{ .Values.gcxi.env.RUN_MODE }}"

  TOMCAT_COOKIEPROC: "{{ .Values.gcxi.env.TOMCAT_COOKIEPROC }}"
  TOMCAT_GCXIROOT: "{{ .Values.gcxi.env.TOMCAT_GCXIROOT }}"
  TOMCAT_HTTPHEADERSECFILTER: "{{ .Values.gcxi.env.TOMCAT_HTTPHEADERSECFILTER }}"
  TOMCAT_NOINFO: "{{ .Values.gcxi.env.TOMCAT_NOINFO }}"
---
## You may load additional set of properties thru gcxi.properties file.
## They will be parsed into gcxi-config-ext-$deploymentCode" confog map and loaded into gcxi container.
## Usage: write a properties file with desired properties and call Helm as follows:
## helm [install|upgrade|template] ... --set-file gcxi.envext="/myfiles/gcxi.properties"
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "gcxi.labels" . | nindent 4 }}
  name: gcxi-config-ext{{ template "deploymentCode" . }}
  namespace: {{ .Values.gcxi.app.namespace }}
data:
  {{- if .Values.gcxi.envext }}
  {{- range $line := splitList "\n" .Values.gcxi.envext }}
  {{- $words := splitList "=" $line }}
  {{- $key := index $words 0 | trim }}
  {{- $value := rest $words | join "=" | trim }}
  {{- if ne (len $key) 0 }}
  {{ $key }}: "{{ $value }}"
  {{- end }}
  {{- end }}
  {{- end }}
{{- end }}
