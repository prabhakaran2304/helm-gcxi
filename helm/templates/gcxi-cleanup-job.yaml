{{ if eq (.Values.gcxi.deployment.deployMain | default false) true }}
{{ if eq (.Values.gcxi.deployment.deployJobCleanup | default false) true }}
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: "pre-delete"
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "hook-succeeded"
    strategy.spinnaker.io/recreate: "true"
  labels:
    {{- include "gcxi.labels" . | nindent 4 }}
  name: gcxi-cleanup{{ template "deploymentCode" . }}
  namespace: {{ .Values.gcxi.app.namespace }}
spec:
  ttlSecondsAfterFinished: {{ .Values.gcxi.jobs.ttlSecondsAfterFinished }}
  template:
    metadata:
      labels:
        {{- include "gcxi.labels" . | nindent 8 }}
        gcxi/app: gcxi-cleanup{{ template "deploymentCode" . }}
        gcxi/deployment-code: gcxi{{ template "deploymentCode" . }}
        gcxi/global-code: gcxi{{ template "globalCode" . }}
        gcxi/role: gcxi-job
        {{- with .Values.gcxi.labels }}
        {{- range $key, $value := $.Values.gcxi.labels.control }}
        {{$key}}: {{$value}}
        {{- end }}
        {{- end }}
      namespace: {{ .Values.gcxi.app.namespace }}
    spec:
      containers:
      - name: gcxi-cleanup
        command: [ "/bin/sh", "-c", "$GCXI_INSTALL_HOME/run_cleanup.sh" ]
        env:
        - name: POD_MOUNT
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['gcxi/deployment-code']
        envFrom:
        - configMapRef:
            name: gcxi-config{{ template "deploymentCode" . }}
            optional: true
        - configMapRef:
            name: gcxi-config-ext{{ template "deploymentCode" . }}
            optional: true
        {{- range $cm := .Values.gcxi.configMaps }}
        - configMapRef:
            name: {{ tpl $cm.name $ }}
            optional: true
        {{- end }}
        image: "{{ template "imageRepo" . }}{{ .Values.gcxi.images.gcxi.control }}:{{ template "gcxiVersion" . }}"
        imagePullPolicy: {{ .Values.gcxi.imagePullPolicy.control }}
        volumeMounts: {{- .Values.gcxi.volumeMounts.control | toYaml | nindent 8 }}
          {{- include "mntSecretGCXI" . | indent 8 }}
          {{- include "mntSecretPG" . | indent 8 }}
      {{- if .Values.gcxi.imagePullSecrets }}
      imagePullSecrets:
      {{- range $key := .Values.gcxi.imagePullSecrets }}
      - name: {{ $key }}
      {{- end }}
      {{- else if .Values.gcxi.imageCredentials }}
      imagePullSecrets:
      - name: {{ .Values.gcxi.imageCredentials.name }}{{ template "deploymentCode" . }}
      {{- end }}
      {{- if .Values.gcxi.nodeSelectors.control }}
      nodeSelector: {{ .Values.gcxi.nodeSelectors.control | toYaml | nindent 8 }}
      {{- end }}
      restartPolicy: Never
      securityContext:
        fsGroup: {{ .Values.gcxi.securityContext.control.fsGroup }}
        runAsUser: {{ .Values.gcxi.securityContext.control.runAsUser }}
        runAsGroup: {{ .Values.gcxi.securityContext.control.runAsGroup }}
      {{- with .Values.gcxi.serviceAccount.control }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if .Values.gcxi.tolerations.control }}
      tolerations: {{ .Values.gcxi.tolerations.control | toYaml | nindent 8 }}
      {{- end }}
      volumes:
      - name: gcxi-backup
        persistentVolumeClaim:
          {{ if eq (.Values.gcxi.deployment.useGlobalShare | default false) true }}
          claimName: gcxi-backup-pvc{{ template "globalCode" . }}
          {{- else }}
          claimName: gcxi-backup-pvc{{ template "deploymentCode" . }}
          {{- end }}
      - name: gcxi-var
        projected:
          sources:
          - secret:
              name: gcxi-secret{{ template "deploymentCode" . }}
              optional: true
          - secret:
              name: gcxi-secret-ext{{ template "deploymentCode" . }}
              optional: true
          {{- range $secret := .Values.gcxi.secrets }}
          - secret:
              name: {{ tpl $secret.name $ }}
              {{- with $secret.items }}
              items:
              {{- range $item := $secret.items }}
              - key: {{ tpl $item.key $ }}
                path: {{ tpl $item.path $ }}
              {{- end }}
              {{- end }}
              optional: true
          {{- end }}
      {{- include "csiSecretGCXI" . | indent 6 }}
      {{- include "csiSecretPG" . | indent 6 }}
  backoffLimit: 5
{{- end }}
{{- end }}
